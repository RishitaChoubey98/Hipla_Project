{"version":3,"sources":["pages/dashboard/report/todayReport.js"],"names":["TodayReport","getIndicator","data","format","addDays","Date","Intl","DateTimeFormat","resolvedOptions","timeZone","postAuth","then","res","request","status","console","log","result","date","setState","score","total","infected","state","this","className","href","onClick","e","preventDefault","props","goToTracing","Component"],"mappings":"8MAGMA,E,kDACF,aAAe,IAAD,8BACV,gBAWJC,aAAe,WACX,IAAIC,EAAO,CACP,UAAaC,kBAAOC,kBAAQ,IAAIC,MAAS,GAAI,cAC7C,QAAWF,kBAAOC,kBAAQ,IAAIC,KAAO,GAAI,cACzC,SAAYC,KAAKC,iBAAiBC,kBAAkBC,UAExDC,YAAS,yBAA0BR,GAC9BS,MAAK,SAACC,GAGY,MADAA,EAAIC,QAAQC,SAQvBC,QAAQC,IAAIJ,EAAIV,KAAKe,OAAO,GAAGC,MAC/B,EAAKC,SAAS,CACVC,MAAQR,EAAIV,KAAKe,OAAO,GAAGI,YAK3CX,YAAS,yBAA0B,IAC9BC,MAAK,SAACC,GAGY,MADAA,EAAIC,QAAQC,QAEvB,EAAKK,SAAS,CACVG,SAAUV,EAAIV,KAAKe,aAxCnC,EAAKM,MAAQ,CACTH,MAAO,EACPE,SAAS,GAJH,E,gEASVE,KAAKvB,iB,+BAsCC,IAAD,OACL,OACI,yBAAKwB,UAAU,gBACX,yBAAKA,UAAU,eACX,8BAAOD,KAAKD,MAAMH,OADtB,oBAIA,yBAAKK,UAAU,eACX,8BAAOD,KAAKD,MAAMD,UADtB,sBAIA,uBAAGG,UAAU,kBAAkBC,KAAK,IAAIC,QAAS,SAACC,GAC9CA,EAAEC,iBACF,EAAKC,MAAMC,gBAFf,6B,GA3DUC,aAoEXhC","file":"static/js/10.e84c5162.chunk.js","sourcesContent":["import React, { Component } from 'reactn';\r\nimport { postAuth } from '../../../util/Service';\r\nimport { addDays, format } from 'date-fns';\r\nclass TodayReport extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            score: 0,\r\n            infected:0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getIndicator();\r\n    }\r\n\r\n    getIndicator = () => {\r\n        let data = {\r\n            \"from_date\": format(addDays(new Date(), -6), 'yyyy-MM-dd'),\r\n            \"to_date\": format(addDays(new Date(),1), 'yyyy-MM-dd'),\r\n            \"timeZone\": Intl.DateTimeFormat().resolvedOptions().timeZone\r\n        }\r\n        postAuth('/api/cross/7day-report', data)\r\n            .then((res) => {\r\n                // console.log(res)\r\n                const status = res.request.status;\r\n                if (status === 200) {\r\n                    // let breaches = [...this.state.breaches];\r\n\r\n                    // res.data.result.map((breach, i) => {\r\n                    //     breaches[i + 1] = new Array(days[new Date(breach.date).getDay()], breach.total);\r\n                    //     return breach;\r\n                    // })\r\n                    console.log(res.data.result[0].date)\r\n                    this.setState({\r\n                        score : res.data.result[0].total\r\n                    })\r\n                }\r\n            })\r\n\r\n        postAuth('/api/employee/infected', {})\r\n            .then((res) => {\r\n                // console.log(res.data.result.score);\r\n                const status = res.request.status;\r\n                if (status === 200) {\r\n                    this.setState({\r\n                        infected: res.data.result\r\n                    })\r\n                }\r\n            })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"breachupdate\">\r\n                <div className=\"breachpanel\">\r\n                    <span>{this.state.score}</span>\r\n                    &nbsp;Breach Today\r\n                </div>\r\n                <div className=\"breachpanel\">\r\n                    <span>{this.state.infected}</span>\r\n                    &nbsp;Known Infected\r\n                </div>\r\n                <a className=\"viewemployeebtn\" href=\"#\" onClick={(e)=>{\r\n                    e.preventDefault();\r\n                    this.props.goToTracing()\r\n                }}>View Contact tracing</a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodayReport;\r\n"],"sourceRoot":""}