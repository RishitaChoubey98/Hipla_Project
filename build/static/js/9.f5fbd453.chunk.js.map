{"version":3,"sources":["pages/dashboard/report/safetyIndicator.js"],"names":["SafetyIndicator","getIndicator","cat","data","state","showDays","format","Date","addDays","postAuth","then","res","request","status","setState","scoreData","result","isLoading","this","getColor","avg","score","color","className","onChange","e","target","value","Component"],"mappings":"6MAGMA,E,kDACF,aAAe,IAAD,8BACV,gBAsBJC,aAAe,SAACC,GACZ,IAAIC,EAAO,GAEX,OAAQ,EAAKC,MAAMC,UACf,IAAK,IACDF,EAAO,CACH,UAAaG,kBAAO,IAAIC,KAAQ,cAChC,QAAWD,kBAAOE,kBAAQ,IAAID,KAAQ,GAAI,eAE9C,MACJ,IAAK,IACDJ,EAAO,CACH,UAAaG,kBAAOE,kBAAQ,IAAID,MAAS,GAAI,cAC7C,QAAWD,kBAAOE,kBAAQ,IAAID,KAAQ,GAAI,eAE9C,MACJ,IAAK,KACDJ,EAAO,CACH,UAAaG,kBAAOE,kBAAQ,IAAID,MAAS,IAAK,cAC9C,QAAWD,kBAAOE,kBAAQ,IAAID,KAAQ,GAAI,eAMtDE,YAAS,8BAA+BN,GACnCO,MAAK,SAACC,GAGY,MADAA,EAAIC,QAAQC,QAEvB,EAAKC,SAAS,CACVC,UAAWJ,EAAIR,KAAKa,OACpBC,WAAW,QArD3B,EAAKb,MAAQ,CACTD,KAAM,CACF,CAAC,GAAI,IACL,CAAC,gCAAiC,IAClC,CAAC,+BAAgC,IACjC,CAAC,uBAAwB,KAE7BE,SAAU,IACVU,UAAW,GACXE,WAAU,GAXJ,E,gEAgBVC,KAAKJ,SAAS,CACVG,WAAW,IAEfC,KAAKjB,aAAa,Y,+BAyCZ,IAAD,OACDkB,EAAW,kBACXC,EAAMF,KAAKd,MAAMW,UAAUM,MAU/B,MATmC,UAA/BH,KAAKd,MAAMW,UAAUO,MACrBH,EAAW,kBAEyB,WAA/BD,KAAKd,MAAMW,UAAUO,MAC1BH,EAAW,eAEyB,QAA/BD,KAAKd,MAAMW,UAAUO,QAC1BH,EAAW,aAGX,yBAAKI,UAAU,aACX,yBAAKA,UAAU,mBACX,gDACA,yBAAKA,UAAU,iBAMP,4BAAQC,SAAU,SAACC,GAAQ,EAAKX,SAAS,CAAET,SAAUoB,EAAEC,OAAOC,QAAS,WAAQ,EAAK1B,oBAChF,4BAAQ0B,MAAO,GAAf,SACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,IAAf,cAwBhB,yBAAKJ,UAAU,cAEX,yBAAKA,UAAWJ,GACZ,yBAAKI,UAAU,gBACX,4BAEQL,KAAKd,MAAMa,UAEX,IAEAG,GAAO,KAGf,+BAAgC,MAAxBF,KAAKd,MAAMC,SAAmB,SAAW,QAASa,KAAKd,MAAMC,SAAU,QAA/E,yEAIR,yBAAKkB,UAAU,aACX,yBAAKA,UAAU,eACX,uBAAGA,UAAU,WADjB,gCAIA,yBAAKA,UAAU,eACX,uBAAGA,UAAU,cADjB,gCAIA,yBAAKA,UAAU,eACX,uBAAGA,UAAU,aADjB,+B,GAxIMK,aAmJf5B","file":"static/js/9.f5fbd453.chunk.js","sourcesContent":["import React, { Component } from 'reactn';\r\nimport {  addDays, format } from 'date-fns';\r\nimport { postAuth } from '../../../util/Service';\r\nclass SafetyIndicator extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            data: [\r\n                [\"\", \"\"],\r\n                [\"Immeditate Attention Required\", 50],\r\n                [\"Breach Minimisation Required\", 50],\r\n                [\"Optimum Safety Level\", 10]\r\n            ],\r\n            showDays: '1',\r\n            scoreData: [],\r\n            isLoading:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n        this.getIndicator('mobile');\r\n\r\n    }\r\n\r\n    getIndicator = (cat) => {\r\n        let data = {}\r\n\r\n        switch (this.state.showDays) {\r\n            case '1':\r\n                data = {\r\n                    \"from_date\": format(new Date(), 'yyyy-MM-dd'),\r\n                    \"to_date\": format(addDays(new Date(), 1), 'yyyy-MM-dd')\r\n                }\r\n                break;\r\n            case '7':\r\n                data = {\r\n                    \"from_date\": format(addDays(new Date(), -6), 'yyyy-MM-dd'),\r\n                    \"to_date\": format(addDays(new Date(), 1), 'yyyy-MM-dd')\r\n                }\r\n                break;\r\n            case '14':\r\n                data = {\r\n                    \"from_date\": format(addDays(new Date(), -13), 'yyyy-MM-dd'),\r\n                    \"to_date\": format(addDays(new Date(), 1), 'yyyy-MM-dd')\r\n                }\r\n                break;\r\n        }\r\n\r\n\r\n        postAuth('/api/cross/safety-indicator', data)\r\n            .then((res) => {\r\n                // console.log(res);\r\n                const status = res.request.status;\r\n                if (status === 200) {\r\n                    this.setState({\r\n                        scoreData: res.data.result,\r\n                        isLoading: false\r\n                    })\r\n                }\r\n            })\r\n    }\r\n    render() {\r\n        let getColor = 'donut deepgreen';\r\n        let avg = this.state.scoreData.score;\r\n        if (this.state.scoreData.color === 'Green') {\r\n            getColor = 'donut deepgreen';\r\n        }\r\n        else if (this.state.scoreData.color === 'Yellow') {\r\n            getColor = 'donut orange';\r\n        }\r\n        else if (this.state.scoreData.color === 'Red') {\r\n            getColor = 'donut red';\r\n        }\r\n        return (\r\n            <div className=\"graph-box\">\r\n                <div className=\"topgraphheading\">\r\n                    <h3>Safety Indicator</h3>\r\n                    <div className=\"exportdataprt\">\r\n\r\n                        {/* <a>Refresh</a> */}\r\n                        {\r\n                            // !this.global.company.is_multiple_day_report\r\n                            //     ?\r\n                            <select onChange={(e) => { this.setState({ showDays: e.target.value }, () => { this.getIndicator() }) }}>\r\n                                <option value={1}>Today</option>\r\n                                <option value={7}>7 days</option>\r\n                                <option value={14}>14 days</option>\r\n                            </select>\r\n                            // :\r\n                            // <h4>Today</h4>\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n                {/* <Chart\r\n                    chartType=\"PieChart\"\r\n                    width=\"100%\"\r\n                    height=\"400px\"\r\n                    data={this.state.data}\r\n                    options={{\r\n                        // title: \"COVID-19 Status\",\r\n                        pieHole: 0.4,\r\n                        is3D: false,\r\n                        slices: {\r\n                            0: { color: 'red' },\r\n                            1: { color: 'orange' },\r\n                            2: { color: 'green' }\r\n                        },\r\n                    }}\r\n                /> */}\r\n                <div className=\"rounddonut\">\r\n\r\n                    <div className={getColor}>\r\n                        <div className=\"getColorText\">\r\n                            <h2>\r\n                                {\r\n                                    this.state.isLoading\r\n                                    ?\r\n                                    '0'\r\n                                    :\r\n                                    avg || '0'\r\n                                }\r\n                            </h2>\r\n                            <small>{this.state.showDays === '1' ? 'Todays' : 'Last '+ this.state.showDays+ ' days'} total number of breach / total number of employee / number of days</small>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"legendprt\">\r\n                        <div className=\"legentpanel\">\r\n                            <i className=\"boxred\"></i>\r\n                            Immediate Attention Required\r\n                        </div>\r\n                        <div className=\"legentpanel\">\r\n                            <i className=\"boxorange\"></i>\r\n                            Breach Minimisation Required\r\n                        </div>\r\n                        <div className=\"legentpanel\">\r\n                            <i className=\"boxgreen\"></i>\r\n                            Optimum Safety Level\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SafetyIndicator;\r\n\r\n\r\n// const data = [\r\n//     [\"Task\", \"Hours per Day\"],\r\n//     [\"Immeditate Attention Required\", 1],\r\n//     [\"Breach Minimisation Required\", 2],\r\n//     [\"Optimum Safety Level\", 50]\r\n// ];\r\n// const options = {\r\n//     // title: \"COVID-19 Status\",\r\n//     pieHole: 0.4,\r\n//     is3D: false,\r\n//     slices: {\r\n//         0: { color: 'red' },\r\n//         1: { color: 'orange' },\r\n//         2: { color: 'green' }\r\n//     },\r\n// };"],"sourceRoot":""}