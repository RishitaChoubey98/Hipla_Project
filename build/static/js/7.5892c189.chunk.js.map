{"version":3,"sources":["pages/dashboard/report/breachHistory.js"],"names":["BreachHistory","getHistory","data","format","addDays","Date","postAuth","then","res","request","status","breaches","state","result","reverse","map","breach","i","Array","to_day","total","setState","this","className","width","height","chartType","loader","options","legend","position","Component"],"mappings":"8NAIMA,E,kDAEF,aAAe,IAAD,8BACV,gBAYJC,WAAa,WACT,IAAIC,EAAO,CACP,UAAaC,kBAAOC,kBAAQ,IAAIC,MAAS,GAAI,cAC7C,QAAWF,kBAAOC,kBAAQ,IAAIC,KAAO,GAAI,eAE7CC,YAAS,yBAA0BJ,GAC9BK,MAAK,SAACC,GAGH,GAAe,MADAA,EAAIC,QAAQC,OACP,CAChB,IAAIC,EAAQ,YAAO,EAAKC,MAAMD,UAE9BH,EAAIN,KAAKW,OAAOC,UAAUC,KAAI,SAACC,EAAQC,GAEnC,OADAN,EAASM,EAAI,GAAK,IAAIC,MAAMf,kBAAOC,kBAAQ,IAAIC,KAAKW,EAAOG,SAAS,GAAI,SAAUH,EAAOI,OAClFJ,KAGX,EAAKK,SAAS,CACVV,kBA7BhB,EAAKC,MAAQ,CACTD,SAAU,CACN,CAAC,QAAS,wBAJR,E,gEASVW,KAAKrB,e,+BA4BL,OACI,yBAAKsB,UAAU,aACX,yBAAKA,UAAU,mBACX,8CACA,4CAGJ,yBAAKA,UAAU,iBACX,kBAAC,IAAD,CACIC,MAAO,QACPC,OAAO,QACPC,UAAU,MACVC,OAAQ,8CACRzB,KAAMoB,KAAKV,MAAMD,SACjBiB,QAAS,CACLC,OAAQ,CAAEC,SAAU,iB,GAtDpBC,aAiEb/B","file":"static/js/7.5892c189.chunk.js","sourcesContent":["import React, { Component } from 'reactn';\r\nimport Chart from \"react-google-charts\";\r\nimport { postAuth } from '../../../util/Service'\r\nimport { parseISO, addDays, format } from 'date-fns';\r\nclass BreachHistory extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            breaches: [\r\n                ['Dates', 'Number of breaches']\r\n            ]\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.getHistory()\r\n\r\n    }\r\n\r\n    getHistory = () => {\r\n        let data = {\r\n            \"from_date\": format(addDays(new Date(), -6), 'yyyy-MM-dd'),\r\n            \"to_date\": format(addDays(new Date(),1), 'yyyy-MM-dd')\r\n        }\r\n        postAuth('/api/cross/7day-report', data)\r\n            .then((res) => {\r\n                // console.log(res, '====================>>>>>>>>>>>>>>>>>>>>>>')\r\n                const status = res.request.status;\r\n                if (status === 200) {\r\n                    let breaches = [...this.state.breaches];\r\n\r\n                    res.data.result.reverse().map((breach, i) => {\r\n                        breaches[i + 1] = new Array(format(addDays(new Date(breach.to_day),-1), 'dd/MM'), breach.total); //.toDateString().split(' ')[0]\r\n                        return breach;\r\n                    })\r\n\r\n                    this.setState({\r\n                        breaches\r\n                    })\r\n                }\r\n            })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"graph-box\">\r\n                <div className=\"topgraphheading\">\r\n                    <h3>Breach history</h3>\r\n                    <h4>Last 7 Days</h4>\r\n                </div>\r\n                {/* <img src={`${process.env.PUBLIC_URL}/assets/images/graphimg2.png`} /> */}\r\n                <div className=\"grapContainer\">\r\n                    <Chart\r\n                        width={'550px'}\r\n                        height=\"400px\"\r\n                        chartType=\"Bar\"\r\n                        loader={<div>Loading Chart</div>}\r\n                        data={this.state.breaches}\r\n                        options={{\r\n                            legend: { position: 'none' }\r\n                        }}\r\n                    // For tests\r\n                    // rootProps={{ 'data-testid': '2' }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BreachHistory;\r\n"],"sourceRoot":""}